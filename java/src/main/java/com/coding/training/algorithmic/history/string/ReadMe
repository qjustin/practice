

1. 两串旋转
如果对于一个字符串 A，将 A 的前面任意一部分挪到后边去形成的字符串称为 A 的旋转词。
比如 A=“12345”,A 的旋转词有 “12345”,“23451”,“34512”,“45123” 和 “51234”。
对于两个字符串 A 和 B，请判断 A 和 B 是否互为旋转词。
给定两个字符串 A 和 B 及他们的长度 lena，lenb，请返回一个 bool 值，代表他们是否互为旋转词。

2. 字符串移位
对于一个字符串，请设计一个算法，将字符串的长度为 len 的前缀平移到字符串的最后。
给定一个字符串 A 和它的长度，同时给定 len，请返回平移后的字符串。
要求空间复杂度为 O(1)，即不能使用辅助数组。

3. 拼接最小字典
对于一个给定的字符串数组，请找到一种拼接顺序，
使所有小字符串拼接成的大字符串是所有可能的拼接中字典序最小的。
给定一个字符串数组 strs，同时给定它的大小，请返回拼接成的串。

4. 空格替换
请编写一个方法，将字符串中的空格全部替换为 “%20”。
假定该字符串有足够的空间存放新增的字符，并且知道字符串的真实长度 (小于等于 1000)，
同时保证字符串由大小写的英文字母组成。
给定一个 string iniString 为原始的串，以及串的长度 int len, 返回替换后的 string。

5. 合法括号序列判断

6. 最长无重复字串

7. 左旋转字符串

8. 字符串的排列

9. 字符串的组合问题

10. 字符串包含问题

11. 字符串转换为整数

12 0-1交换
    把一个0-1串（只包含0和1的串）进行排序，你可以交换任意两个位置，问最少交换的次数?

13 交换星号
    一个字符串只包含*和数字，请把它的*号都放开头。
14 子串变位词
    给定两个串a和b，问b是否是a的子串的变位词。例如输入a = hello, b = lel, lle, ello都是true,但是b = elo是false。

15 单词翻转
    翻转句子中全部的单词，单词内容不变。 例如I’m a student.  变为student. a I’m

16 字符串循环移位abcd
    移动1次变为bcda    移动2次变为cdab    移动3次变为dabc
    结论： 长度为n， 移动m次，相当于移动m % n次 ：前m % n位翻转，后n – m % n位翻转，总体再翻转一次


罗马数字转整数回文数
乱序字符串
有效回文串
翻转字符串
最长无重复字符的子串
字符串压缩
比较字符串编辑距离II
最长公共前缀
回文（字符串倒置）
替换空格
单词拆分
分割回文串
反转字符串
把字符串转换成整数
验证回文串
字符串反转显示
回文判断
求最长回文子串
递归
字符串替换 replace()
字符串分割 split()
字符串包含判断 in
无重复字符的最长子串

1. 二叉树相同子树 ()